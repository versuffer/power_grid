from datetime import date, datetime, time, timedelta

from django.db import models

from employees.models import Employee

from .choices import DAY_STATUS


class WorkDay(models.Model):
    date = models.DateField(unique=True, verbose_name='Дата')
    employee = models.ForeignKey(
        to=Employee,
        related_name="work_days",
        on_delete=models.CASCADE,
        verbose_name="Работник",
    )
    day_status = models.CharField(
        max_length=255,
        choices=DAY_STATUS,
        default=DAY_STATUS[0][1],
        verbose_name="Учёт в табеле",
    )
    work_started = models.TimeField(default=time(8, 0, 0), verbose_name="Начало работы")
    work_ended = models.TimeField(default=time(17, 0, 0), verbose_name="Конец работы")
    launch_started = models.TimeField(
        default=time(12, 0, 0), verbose_name="Начало обеденного перерыва"
    )
    launch_ended = models.TimeField(
        default=time(13, 0, 0), verbose_name="Конец обеденного перерыва"
    )
    launch_duration = models.DurationField(
        default=timedelta(hours=1), verbose_name="Длительность обеденного перерыва"
    )
    work_duration = models.DurationField(
        default=timedelta(hours=8),
        verbose_name="Длительность рабочего времени (с учётом обеденного перерыва)",
    )

    @staticmethod
    def _calculate_timedelta(start_time, end_time):
        return datetime.combine(date.min, end_time) - datetime.combine(
            date.min, start_time
        )

    def save(self, *args, **kwargs):
        self.launch_duration = self._calculate_timedelta(
            self.launch_started, self.launch_ended
        )
        self.work_duration = (
            self._calculate_timedelta(self.work_started, self.work_ended)
            - self.launch_duration
        )
        super().save(*args, **kwargs)
