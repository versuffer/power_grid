from djoser.serializers import UserCreateSerializer
from rest_framework import serializers

from employees.models import Employee, Right
from users.models import User


class EmployeeDefaultSerializer(serializers.ModelSerializer):
    class Meta:
        model = Employee
        fields = "__all__"


class UserDefaultSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = ["id", "email", "profile"]
        read_only_fields = ["profile"]


class EmployeeHyperlinkedDetailSerializer(serializers.HyperlinkedModelSerializer):
    credentials = serializers.CharField()

    class Meta:
        model = Employee
        fields = ["url", "credentials", "individual_number", "department"]


class UserListSerializer(UserDefaultSerializer):
    profile = EmployeeHyperlinkedDetailSerializer()


class RightDetailSerializer(serializers.ModelSerializer):
    owners = EmployeeHyperlinkedDetailSerializer(many=True, read_only=True)

    class Meta:
        model = Right
        fields = "__all__"


class RightHyperlinkedDetailSerializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = Right
        exclude = ["description"]


class EmployeeRetrieveSerializer(EmployeeDefaultSerializer):
    supervisors = UserListSerializer(many=True)
    rights = RightHyperlinkedDetailSerializer(many=True)


class UserRetrieveSerializer(UserDefaultSerializer):
    profile = EmployeeRetrieveSerializer()


class CustomUserCreateSerializer(UserCreateSerializer):
    class Meta:
        model = User
        fields = ["email", "password", "profile"]


class UserUpdateSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = ["email", "profile"]
