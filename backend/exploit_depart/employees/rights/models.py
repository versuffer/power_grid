from django.db import models

from common.data.employees import choices
from common.data.employees.constraints import messages

Q = models.Q


class Right(models.Model):
    class Meta:
        verbose_name = "Право"
        constraints = [
            models.UniqueConstraint(
                fields=["name", "category", "voltage_level_grade"],
                # Redundant condition just for replacing default violation_error_message
                condition=Q(name__isnull=False),
                name="unique_right",
                violation_error_message=messages.get("unique_right"),
            ),
            # If category is about electrical safety then voltage level must be specified
            models.CheckConstraint(
                check=(
                    Q(category=choices.ELEC_CAT)
                    & ~Q(voltage_level_grade=choices.NOT_SPECIFIED)
                )
                | (
                    Q(category=choices.OTHER_CAT)
                    & Q(voltage_level_grade=choices.NOT_SPECIFIED)
                ),
                name="if_volt_level_filled",
                violation_error_message=messages.get("if_volt_level_filled"),
            ),
        ]

    name = models.CharField(max_length=255, verbose_name="Право")
    category = models.CharField(
        max_length=255, choices=choices.RIGHT_CATEGORY, verbose_name="Категория"
    )
    voltage_level_grade = models.CharField(
        max_length=255,
        choices=choices.RIGHT_VOLTAGE_LEVEL,
        verbose_name="До 1000 В / До и выше 1000 В",
    )
    description = models.TextField(blank=True, null=True, verbose_name="Описание")

    def save(self, *args, **kwargs):
        self.full_clean()
        super().save(*args, **kwargs)
