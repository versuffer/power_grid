from django.conf import settings
from django.db import models

from common.data.employees import choices
from common.services.workdays_manager import create_raw_calendar

from .rights.models import Right

Q = models.Q


class Employee(models.Model):
    class Meta:
        verbose_name = "Работник"

    first_name = models.CharField(max_length=255, verbose_name="Фамилия")
    last_name = models.CharField(max_length=255, verbose_name="Имя")
    middle_name = models.CharField(max_length=255, verbose_name="Отчество")
    individual_number = models.PositiveIntegerField(
        unique=True, null=True, blank=False, verbose_name="Табельный номер"
    )
    department = models.CharField(
        max_length=255, choices=choices.DEPARTMENTS, verbose_name="Район"
    )
    unit = models.CharField(
        max_length=255,
        choices=choices.UNITS,
        verbose_name="Участок",
        null=True,
        blank=True,
    )
    supervisors = models.ManyToManyField(
        to=settings.AUTH_USER_MODEL,
        related_name="subordinates",
        verbose_name="Руководители",
        blank=True,
    )
    position = models.CharField(
        max_length=255, choices=choices.POSITIONS, verbose_name="Должность"
    )
    grade = models.CharField(
        max_length=10,
        choices=choices.GRADES,
        verbose_name="Разряд",
        blank=True,
        null=True,
    )
    personnel_type = models.CharField(
        max_length=255, choices=choices.PERSONNEL_TYPE, verbose_name="Тип персонала"
    )
    elec_safety_grade = models.CharField(
        max_length=3,
        choices=choices.ELEC_SAFETY_GRADES,
        verbose_name="Группа по электробезопасности",
    )
    voltage_level_grade = models.CharField(
        max_length=255,
        choices=choices.VOLTAGE_LEVEL_GRADE,
        verbose_name="До 1000 В / До и выше 1000 В",
    )
    rights = models.ManyToManyField(
        to=Right, related_name="owners", verbose_name="Права", blank=True
    )
    last_exam_date = models.DateField(
        null=True, blank=True, verbose_name="Дата последней проверки знаний"
    )
    suit_size_height_summer = models.CharField(
        max_length=255,
        choices=choices.SUIT_SIZE_HEIGHT,
        verbose_name="Размер одежды (рост), лето",
    )
    suit_size_height_winter = models.CharField(
        max_length=255,
        choices=choices.SUIT_SIZE_HEIGHT,
        verbose_name="Размер одежды (рост), зима",
    )
    suit_size_width_summer = models.CharField(
        max_length=255,
        choices=choices.SUIT_SIZE_WIDTH,
        verbose_name="Размер одежды (обхват), лето",
    )
    suit_size_width_winter = models.CharField(
        max_length=255,
        choices=choices.SUIT_SIZE_WIDTH,
        verbose_name="Размер одежды (обхват), зима",
    )
    footwear_size_summer = models.CharField(
        max_length=255, choices=choices.FOOTWEAR_SIZE, verbose_name="Размер обуви, лето"
    )
    footwear_size_winter = models.CharField(
        max_length=255, choices=choices.FOOTWEAR_SIZE, verbose_name="Размер обуви, зима"
    )

    @property
    def credentials(self):
        return f"{self.first_name} {self.last_name} {self.middle_name}"

    def __str__(self):
        return self.credentials

    def save(self, *args, **kwargs):
        super().save(*args, **kwargs)
        create_raw_calendar(self)
