from django.contrib.auth import get_user_model

import pytest
from mixer.backend.django import mixer
from rest_framework.test import APIClient
from rest_framework_simplejwt.tokens import RefreshToken

User = get_user_model()

from rest_framework.renderers import JSONRenderer
from testing.data.valid_data import valid_user_create_data


def create_tokens(user: User):
    token = RefreshToken.for_user(user)
    return {"refresh_token": str(token), "access_token": str(token.access_token)}


def authenticate(client: APIClient, tokens: dict[str]):
    client.credentials(HTTP_AUTHORIZATION="JWT " + tokens.get("access_token"))
    return client


def user_tokens(user):
    return create_tokens(user)


@pytest.fixture
def user():
    return mixer.blend(User)


@pytest.fixture
def user_json():
    return JSONRenderer().render(data=valid_user_create_data)


@pytest.fixture
def user_factory():
    def factory():
        return mixer.blend(User)

    return factory


@pytest.fixture
def users():
    return mixer.cycle(2).blend(User)


@pytest.fixture
def admin_user():
    return mixer.blend(User, is_staff=True)


@pytest.fixture
def anon_client():
    return APIClient()


@pytest.fixture
def auth_client(user):
    return authenticate(APIClient(), user_tokens(user))


@pytest.fixture
def admin_client(admin_user):
    return authenticate(APIClient(), user_tokens(admin_user))
