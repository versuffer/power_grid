from rest_framework import serializers

from employees.serializers import EmployeeHyperlinkedDetailSerializer

from .models import WorkDay
from .services.validation import WorkDayValidator


class WorkDayDetailSerializer(serializers.ModelSerializer):
    employee = EmployeeHyperlinkedDetailSerializer()

    class Meta:
        model = WorkDay
        fields = "__all__"
        read_only_fields = ["date", "employee", "work_duration", "launch_duration"]

    def validate(self, data):
        validator = WorkDayValidator(self, data)
        return validator.workday_validation()


# Need to implement MultipleUpdateSerializerMixin
class WorkDayMultipleUpdateSerializer(serializers.ModelSerializer):
    pk_list = serializers.ListField(child=serializers.IntegerField())

    class Meta:
        model = WorkDay
        exclude = ["id"]
        read_only_fields = ["date", "employee", "work_duration", "launch_duration"]

    def validate(self, data):
        validator = WorkDayValidator(self, data)
        return validator.multiple_workday_validation()


class WorkDayHyperlinkedDetailSerializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = WorkDay
        fields = ["url", "day_status", "work_duration"]
