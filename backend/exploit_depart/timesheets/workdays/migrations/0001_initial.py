# Generated by Django 4.1.7 on 2023-04-26 06:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("employees", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Дата")),
                (
                    "day_status",
                    models.CharField(
                        choices=[
                            ("раб.", "Рабочий день"),
                            ("вых.", "Выходной"),
                            ("сокр.", "Сокращённый день"),
                            ("бол.", "Больничный"),
                            ("отп.", "Отпуск"),
                        ],
                        max_length=255,
                        verbose_name="Учёт в табеле",
                    ),
                ),
                (
                    "work_started",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Начало рабочего дня"
                    ),
                ),
                (
                    "work_ended",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Конец рабочего дня"
                    ),
                ),
                (
                    "launch_started",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Начало обеденного перерыва"
                    ),
                ),
                (
                    "launch_ended",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Конец обеденного перерыва"
                    ),
                ),
                (
                    "launch_duration",
                    models.DurationField(
                        blank=True,
                        null=True,
                        verbose_name="Длительность обеденного перерыва",
                    ),
                ),
                (
                    "work_duration",
                    models.DurationField(
                        blank=True,
                        null=True,
                        verbose_name="Длительность рабочего времени (с учётом обеденного перерыва)",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workdays",
                        to="employees.employee",
                        verbose_name="Работник",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рабочий день",
            },
        ),
        migrations.AddConstraint(
            model_name="workday",
            constraint=models.UniqueConstraint(
                fields=("date", "employee"), name="unique_workday"
            ),
        ),
        migrations.AddConstraint(
            model_name="workday",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("work_started__isnull", False), ("work_ended__isnull", False)
                    ),
                    models.Q(
                        ("work_started__isnull", True), ("work_ended__isnull", True)
                    ),
                    _connector="OR",
                ),
                name="work_data_integrity",
                violation_error_message="Не указано время начала или окончания рабочего дня.",
            ),
        ),
        migrations.AddConstraint(
            model_name="workday",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("launch_started__isnull", False),
                        ("launch_ended__isnull", False),
                    ),
                    models.Q(
                        ("launch_started__isnull", True), ("launch_ended__isnull", True)
                    ),
                    _connector="OR",
                ),
                name="launch_data_integrity",
                violation_error_message="Не указано время начала или окончания обеденного перерыва.",
            ),
        ),
    ]
