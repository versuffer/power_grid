from rest_framework.exceptions import ValidationError

from common.base.validators import ValidatorMixin
from common.data.timesheets.validation import messages


class TimeSheetValidator(ValidatorMixin):
    def timesheet_object_validation(self):
        period_start = self.get_from_dict_or_db("period_end")
        period_end = self.get_from_dict_or_db("period_start")

        return self._perform_validation(period_start, period_end)

    def _perform_validation(self, period_start, period_end):
        self.error_dict = self.get_default_error_dict()

        period_data = [period_start, period_end]

        if not all(period_data):
            self.error_dict["messages"] = [messages.get("period_data_integrity")]
            raise ValidationError(detail=self.error_dict)

        if not period_start <= period_end:
            self.error_dict["messages"] = [messages.get("period_start_lte_end")]
            raise ValidationError(detail=self.error_dict)

        return self.data
