from datetime import time, timedelta

from django.apps import apps
from django.db.models import Q
from timesheets.choices import shortened, weekend, workday

from .prod_cal_parser import get_prod_calendar_dict


def create_raw_calendar(employee):
    prod_cal_dict = get_prod_calendar_dict()
    workday_list = []
    workday_model = apps.get_model("timesheets", "WorkDay")

    for date, day_status in prod_cal_dict.items():
        if day_status == "Рабочий день":
            work_day = workday_model(
                date=date,
                employee=employee,
                day_status=workday,
                work_started=time(8, 0, 0),
                work_ended=time(17, 0, 0),
                launch_started=time(12, 0, 0),
                launch_ended=time(13, 0, 0),
                work_duration=timedelta(hours=8),
                launch_duration=timedelta(hours=1),
            )

        if day_status == "Выходной":
            work_day = workday_model(
                date=date,
                employee=employee,
                day_status=weekend,
                work_started=None,
                work_ended=None,
                launch_started=None,
                launch_ended=None,
                work_duration=None,
                launch_duration=None,
            )

        if day_status == "Сокращённый день":
            work_day = workday_model(
                date=date,
                employee=employee,
                day_status=shortened,
                work_started=time(8, 0, 0),
                work_ended=time(16, 0, 0),
                launch_started=time(12, 0, 0),
                launch_ended=time(13, 0, 0),
                work_duration=timedelta(hours=7),
                launch_duration=timedelta(hours=1),
            )

        workday_list.append(work_day)

    workday_model.objects.bulk_create(objs=workday_list, ignore_conflicts=True)


def add_workdays(timesheet):
    workday_model = apps.get_model("timesheets", "WorkDay")
    timesheet.work_days.clear()
    timesheet.work_days.add(
        *workday_model.objects.filter(
            Q(employee__in=timesheet.employees.all())
            & Q(date__gte=timesheet.period_start)
            & Q(date__lte=timesheet.period_end)
        )
    )
