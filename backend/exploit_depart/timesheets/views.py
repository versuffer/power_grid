from common.serializers.mixins import MultiSerializerViewSetMixin
from django.shortcuts import redirect, reverse
from drf_spectacular.utils import extend_schema
from rest_framework.mixins import RetrieveModelMixin, UpdateModelMixin
from rest_framework.viewsets import GenericViewSet, ModelViewSet

from .models import TimeSheet, WorkDay
from .serializers import (
    TimeSheetCreateSerializer,
    TimeSheetDefaultSerializer,
    TimeSheetListSerializer,
    TimeSheetRetrieveSerializer,
    TimeSheetUpdateSerializer,
    WorkDayDetailSerializer,
)


@extend_schema(tags=["Workdays"])
class RetrieveUpdateWorkDayViewSet(
    GenericViewSet, RetrieveModelMixin, UpdateModelMixin
):
    queryset = WorkDay.objects.all()
    serializer_class = WorkDayDetailSerializer

    def update(self, request, *args, **kwargs):
        response = super().update(request, *args, **kwargs)
        return redirect(request.path)


@extend_schema(tags=["Timesheets"])
class TimeSheetViewSet(MultiSerializerViewSetMixin, ModelViewSet):
    queryset = TimeSheet.objects.all()
    serializer_class = TimeSheetDefaultSerializer
    serializer_action_classes = {
        "list": TimeSheetListSerializer,
        "retrieve": TimeSheetRetrieveSerializer,
        "create": TimeSheetCreateSerializer,
        "update": TimeSheetUpdateSerializer,
        "partial_update": TimeSheetUpdateSerializer,
    }

    def create(self, request, *args, **kwargs):
        response = super().create(request, *args, **kwargs)
        path = reverse("timesheet-detail", args=[response.data["id"]])
        return redirect(path)

    def update(self, request, *args, **kwargs):
        response = super().update(request, *args, **kwargs)
        return redirect(request.path)
