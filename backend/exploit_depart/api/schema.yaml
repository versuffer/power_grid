openapi: 3.0.3
info:
  title: Exploitation department
  version: 0.0.1
  description: Content management system
paths:
  /api/auth/jwt/create/:
    post:
      operationId: api_auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/jwt/refresh/:
    post:
      operationId: api_auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/jwt/verify/:
    post:
      operationId: api_auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/users/:
    get:
      operationId: api_auth_users_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetail'
          description: ''
    post:
      operationId: api_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: api_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: api_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: api_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    delete:
      operationId: api_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/activation/:
    post:
      operationId: api_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/auth/users/me/:
    get:
      operationId: api_auth_users_me_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: api_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: api_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    delete:
      operationId: api_auth_users_me_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/resend_activation/:
    post:
      operationId: api_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email/:
    post:
      operationId: api_auth_users_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email_confirm/:
    post:
      operationId: api_auth_users_reset_email_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/auth/users/reset_password/:
    post:
      operationId: api_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: api_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/auth/users/set_email/:
    post:
      operationId: api_auth_users_set_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/auth/users/set_password/:
    post:
      operationId: api_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/employees/:
    get:
      operationId: api_employees_list
      tags:
      - Employees
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDetail'
          description: ''
    post:
      operationId: api_employees_create
      tags:
      - Employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeDetail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetail'
          description: ''
  /api/employees/{id}/:
    get:
      operationId: api_employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - Employees
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetail'
          description: ''
    put:
      operationId: api_employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - Employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeDetail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetail'
          description: ''
    patch:
      operationId: api_employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - Employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeDetail'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDetail'
          description: ''
    delete:
      operationId: api_employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - Employees
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    DepartmentEnum:
      enum:
      - РОКЛ
      - РОВЛиП
      - СРЗА
      - ЭТЛ
      type: string
      description: |-
        * `РОКЛ` - Район обслуживания кабельных линий
        * `РОВЛиП` - Район обслуживания воздушных линий и подстанций
        * `СРЗА` - Служба релейной защиты и автоматики
        * `ЭТЛ` - Электротехническая лаборатория
    ElecSafetyGradeEnum:
      enum:
      - I
      - II
      - III
      - IV
      - V
      type: string
      description: |-
        * `I` - I группа
        * `II` - II группа
        * `III` - III группа
        * `IV` - IV группа
        * `V` - V группа
    EmployeeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Фамилия
          maxLength: 255
        last_name:
          type: string
          title: Имя
          maxLength: 255
        middle_name:
          type: string
          title: Отчество
          maxLength: 255
        individual_number:
          type: integer
          nullable: true
          title: Табельный номер
        department:
          allOf:
          - $ref: '#/components/schemas/DepartmentEnum'
          title: Район
        unit:
          allOf:
          - $ref: '#/components/schemas/UnitEnum'
          title: Участок
        position:
          allOf:
          - $ref: '#/components/schemas/PositionEnum'
          title: Должность
        grade:
          allOf:
          - $ref: '#/components/schemas/GradeEnum'
          title: Разряд
        personnel_type:
          allOf:
          - $ref: '#/components/schemas/PersonnelTypeEnum'
          title: Вид персонала
        elec_safety_grade:
          allOf:
          - $ref: '#/components/schemas/ElecSafetyGradeEnum'
          title: Группа по электробезопасности
        voltage_level_grade:
          allOf:
          - $ref: '#/components/schemas/VoltageLevelGradeEnum'
          title: До 1000 В / Выше 1000 В
        last_exam_date:
          type: string
          format: date
          nullable: true
          title: Последняя проверка знаний
        suit_size_height_summer:
          allOf:
          - $ref: '#/components/schemas/SuitSizeHeightSummerEnum'
          title: Размер одежды (рост), лето
        suit_size_height_winter:
          allOf:
          - $ref: '#/components/schemas/SuitSizeHeightWinterEnum'
          title: Размер одежды (рост), зима
        suit_size_width_summer:
          allOf:
          - $ref: '#/components/schemas/SuitSizeWidthSummerEnum'
          title: Размер одежды (обхват), лето
        suit_size_width_winter:
          allOf:
          - $ref: '#/components/schemas/SuitSizeWidthWinterEnum'
          title: Размер одежды (обхват), зима
        footwear_size_summer:
          allOf:
          - $ref: '#/components/schemas/FootwearSizeSummerEnum'
          title: Размер обуви, лето
        footwear_size_winter:
          allOf:
          - $ref: '#/components/schemas/FootwearSizeWinterEnum'
          title: Размер обуви, зима
        supervisors:
          type: array
          items:
            type: integer
            title: Руководители
          title: Руководители
        rights:
          type: array
          items:
            type: integer
            title: Права
          title: Права
      required:
      - department
      - elec_safety_grade
      - first_name
      - footwear_size_summer
      - footwear_size_winter
      - grade
      - id
      - last_name
      - middle_name
      - personnel_type
      - position
      - rights
      - suit_size_height_summer
      - suit_size_height_winter
      - suit_size_width_summer
      - suit_size_width_winter
      - supervisors
      - unit
      - voltage_level_grade
    FootwearSizeSummerEnum:
      enum:
      - '34'
      - '35'
      - '36'
      - '37'
      - '38'
      - '39'
      - '40'
      - '41'
      - '42'
      - '43'
      - '44'
      - '45'
      - '46'
      - '47'
      - '48'
      - '49'
      - '50'
      - '51'
      - '52'
      type: string
      description: |-
        * `34` - 34
        * `35` - 35
        * `36` - 36
        * `37` - 37
        * `38` - 38
        * `39` - 39
        * `40` - 40
        * `41` - 41
        * `42` - 42
        * `43` - 43
        * `44` - 44
        * `45` - 45
        * `46` - 46
        * `47` - 47
        * `48` - 48
        * `49` - 49
        * `50` - 50
        * `51` - 51
        * `52` - 52
    FootwearSizeWinterEnum:
      enum:
      - '34'
      - '35'
      - '36'
      - '37'
      - '38'
      - '39'
      - '40'
      - '41'
      - '42'
      - '43'
      - '44'
      - '45'
      - '46'
      - '47'
      - '48'
      - '49'
      - '50'
      - '51'
      - '52'
      type: string
      description: |-
        * `34` - 34
        * `35` - 35
        * `36` - 36
        * `37` - 37
        * `38` - 38
        * `39` - 39
        * `40` - 40
        * `41` - 41
        * `42` - 42
        * `43` - 43
        * `44` - 44
        * `45` - 45
        * `46` - 46
        * `47` - 47
        * `48` - 48
        * `49` - 49
        * `50` - 50
        * `51` - 51
        * `52` - 52
    GradeEnum:
      enum:
      - 3 р.
      - 4 р.
      - 5 р.
      type: string
      description: |-
        * `3 р.` - 3 разряд
        * `4 р.` - 4 разряд
        * `5 р.` - 5 разряд
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedEmployeeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Фамилия
          maxLength: 255
        last_name:
          type: string
          title: Имя
          maxLength: 255
        middle_name:
          type: string
          title: Отчество
          maxLength: 255
        individual_number:
          type: integer
          nullable: true
          title: Табельный номер
        department:
          allOf:
          - $ref: '#/components/schemas/DepartmentEnum'
          title: Район
        unit:
          allOf:
          - $ref: '#/components/schemas/UnitEnum'
          title: Участок
        position:
          allOf:
          - $ref: '#/components/schemas/PositionEnum'
          title: Должность
        grade:
          allOf:
          - $ref: '#/components/schemas/GradeEnum'
          title: Разряд
        personnel_type:
          allOf:
          - $ref: '#/components/schemas/PersonnelTypeEnum'
          title: Вид персонала
        elec_safety_grade:
          allOf:
          - $ref: '#/components/schemas/ElecSafetyGradeEnum'
          title: Группа по электробезопасности
        voltage_level_grade:
          allOf:
          - $ref: '#/components/schemas/VoltageLevelGradeEnum'
          title: До 1000 В / Выше 1000 В
        last_exam_date:
          type: string
          format: date
          nullable: true
          title: Последняя проверка знаний
        suit_size_height_summer:
          allOf:
          - $ref: '#/components/schemas/SuitSizeHeightSummerEnum'
          title: Размер одежды (рост), лето
        suit_size_height_winter:
          allOf:
          - $ref: '#/components/schemas/SuitSizeHeightWinterEnum'
          title: Размер одежды (рост), зима
        suit_size_width_summer:
          allOf:
          - $ref: '#/components/schemas/SuitSizeWidthSummerEnum'
          title: Размер одежды (обхват), лето
        suit_size_width_winter:
          allOf:
          - $ref: '#/components/schemas/SuitSizeWidthWinterEnum'
          title: Размер одежды (обхват), зима
        footwear_size_summer:
          allOf:
          - $ref: '#/components/schemas/FootwearSizeSummerEnum'
          title: Размер обуви, лето
        footwear_size_winter:
          allOf:
          - $ref: '#/components/schemas/FootwearSizeWinterEnum'
          title: Размер обуви, зима
        supervisors:
          type: array
          items:
            type: integer
            title: Руководители
          title: Руководители
        rights:
          type: array
          items:
            type: integer
            title: Права
          title: Права
    PatchedUserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        profile:
          $ref: '#/components/schemas/EmployeeDetail'
    PersonnelTypeEnum:
      enum:
      - Админ/тех
      - Опер.
      - Ремонт.
      - Опер/Рем
      type: string
      description: |-
        * `Админ/тех` - Административно-технический
        * `Опер.` - Оперативный
        * `Ремонт.` - Ремонтный
        * `Опер/Рем` - Оперативно-ремонтный
    PositionEnum:
      enum:
      - Зам.
      - Рук.
      - Нач/сл.
      - Инж.
      - Маст.
      - ЭМ/эксп.
      - ЭМ/исп.
      - ЭМ/надз.
      - ЭМ/РЗА
      type: string
      description: |-
        * `Зам.` - Заместитель технического директора
        * `Рук.` - Руководитель подразделения
        * `Нач/сл.` - Начальник службы
        * `Инж.` - Инженер
        * `Маст.` - Мастер
        * `ЭМ/эксп.` - Электромонтёр по эксплуатации распределительных сетей
        * `ЭМ/исп.` - Электромонтёр по испытаниям и измерениям
        * `ЭМ/надз.` - Электромонтёр по надзору за трассами кабельных сетей
        * `ЭМ/РЗА` - Электромонтёр по ремонту аппаратуры РЗА
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 254
      required:
      - current_password
      - new_email
    SuitSizeHeightSummerEnum:
      enum:
      - 158-164
      - 170-176
      - 182-188
      - 194-200
      type: string
      description: |-
        * `158-164` - 158-164 см
        * `170-176` - 170-176 см
        * `182-188` - 182-188 см
        * `194-200` - 194-200 см
    SuitSizeHeightWinterEnum:
      enum:
      - 158-164
      - 170-176
      - 182-188
      - 194-200
      type: string
      description: |-
        * `158-164` - 158-164 см
        * `170-176` - 170-176 см
        * `182-188` - 182-188 см
        * `194-200` - 194-200 см
    SuitSizeWidthSummerEnum:
      enum:
      - '88–92 '
      - 96–100
      - 104–108
      - 112–116
      - 120–124
      - 128–132
      - 136–140
      type: string
      description: |-
        * `88–92 ` - 44–46
        * `96–100` - 48–50
        * `104–108` - 52–54
        * `112–116` - 56–58
        * `120–124` - 60–62
        * `128–132` - 64–66
        * `136–140` - 68–70
    SuitSizeWidthWinterEnum:
      enum:
      - '88–92 '
      - 96–100
      - 104–108
      - 112–116
      - 120–124
      - 128–132
      - 136–140
      type: string
      description: |-
        * `88–92 ` - 44–46
        * `96–100` - 48–50
        * `104–108` - 52–54
        * `112–116` - 56–58
        * `120–124` - 60–62
        * `128–132` - 64–66
        * `136–140` - 68–70
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UnitEnum:
      enum:
      - Уч. ВЛ
      - Уч. ТП-РП
      - Уч. надзор
      - Уч. НВ
      - Уч. ВВ
      - Уч. КШ
      - Уч. универ.
      type: string
      description: |-
        * `Уч. ВЛ` - Участок воздушных линий
        * `Уч. ТП-РП` - Участок трансформаторных подстанций и распределительных пунктов
        * `Уч. надзор` - Участок по надзору за трассами кабельных сетей
        * `Уч. НВ` - Участок низковольтный
        * `Уч. ВВ` - Участок высоковольтный
        * `Уч. КШ` - Участок кабельных шкафов
        * `Уч. универ.` - Участок универсальный
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - id
      - password
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        profile:
          $ref: '#/components/schemas/EmployeeDetail'
      required:
      - email
      - id
      - profile
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 254
      required:
      - new_email
    VoltageLevelGradeEnum:
      enum:
      - До 1000 В
      - Выше 1000 В
      type: string
      description: |-
        * `До 1000 В` - Допущен до работ в электроустановках напряжением до 1000 В
        * `Выше 1000 В` - Допущен до работ в электроустановках напряжением выше 1000 В
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "JWT"
